.TH "st4tic::visitor::Visitor" 3 "27 Dec 2009" "Version 1.0" "St4tic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
st4tic::visitor::Visitor \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBvisit\fP (\fBNodeList\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBNodeListOptional\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBNodeOptional\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBNodeSequence\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBNodeToken\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBStart\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBRequire\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBMathExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBAdditiveExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBMultiplicativeExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBUnaryExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBRelationalExprssion\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBRelationalEqualityExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBRelationalGreaterExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBRelationalLessExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBUnaryRelational\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBIfExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBWhileExpression\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBVariableDeclaration\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBVariableAssign\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBVariableName\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBJavaStaticMethods\fP n)"
.br
.ti -1c
.RI "void \fBvisit\fP (\fBStatementExpression\fP n)"
.br
.in -1c
.SH "Detailed Description"
.PP 
All void visitors must implement this interface. 
.SH "Member Function Documentation"
.PP 
.SS "void st4tic.visitor.Visitor.visit (\fBStatementExpression\fP n)"f0 -> VariableDeclaration() | VariableAssign() | JavaStaticMethods() | IfExpression() | WhileExpression() 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBJavaStaticMethods\fP n)"f0 -> <IDENTIFIER> f1 -> ( ':' <IDENTIFIER> )+ f2 -> '(' f3 -> MathExpression() f4 -> ( ',' MathExpression() )* f5 -> ')' f6 -> '.' 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBVariableName\fP n)"f0 -> <IDENTIFIER> 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBVariableAssign\fP n)"f0 -> VariableName() f1 -> '=' f2 -> MathExpression() f3 -> '.' 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBVariableDeclaration\fP n)"f0 -> 'def' f1 -> VariableName() f2 -> '=' f3 -> MathExpression() f4 -> '.' 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBWhileExpression\fP n)"f0 -> 'while' f1 -> RelationalExprssion() f2 -> 'do' f3 -> ( StatementExpression() )* f4 -> 'stop' 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBIfExpression\fP n)"f0 -> 'if' f1 -> RelationalExprssion() f2 -> 'do' f3 -> ( StatementExpression() )* f4 -> 'stop' 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBUnaryRelational\fP n)"f0 -> MathExpression() 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBRelationalLessExpression\fP n)"f0 -> UnaryRelational() f1 -> [ ( '<' | '<=' ) UnaryRelational() ] 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBRelationalGreaterExpression\fP n)"f0 -> RelationalLessExpression() f1 -> [ ( '>' | '>=' ) RelationalLessExpression() ] 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBRelationalEqualityExpression\fP n)"f0 -> RelationalGreaterExpression() f1 -> [ ( '==' | '!=' ) RelationalGreaterExpression() ] 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBRelationalExprssion\fP n)"f0 -> RelationalEqualityExpression() 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBUnaryExpression\fP n)"f0 -> '(' MathExpression() ')' | <INTEGER_LITERAL> | VariableName() 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBMultiplicativeExpression\fP n)"f0 -> UnaryExpression() f1 -> ( ( '*' | '/' | '%' ) UnaryExpression() )* 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBAdditiveExpression\fP n)"f0 -> MultiplicativeExpression() f1 -> ( ( '+' | '-' ) MultiplicativeExpression() )* 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBMathExpression\fP n)"f0 -> AdditiveExpression() 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBRequire\fP n)"f0 -> 'require' f1 -> ( <IDENTIFIER> )+ 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBStart\fP n)"f0 -> ( Require() '.' )+ f1 -> ( StatementExpression() )* 
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBNodeToken\fP n)"
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBNodeSequence\fP n)"
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBNodeOptional\fP n)"
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBNodeListOptional\fP n)"
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.
.SS "void st4tic.visitor.Visitor.visit (\fBNodeList\fP n)"
.PP
Implemented in \fBst4tic.visitor.DepthFirstVisitor\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for St4tic from the source code.
